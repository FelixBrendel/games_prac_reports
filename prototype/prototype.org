* Prototype Description
For the physical prototype of the second milestone we decided to use paper,
domino tiles and wooden cubes. We first used a six sided Pokemon-themed die as
the player-controlled cube to test in our sample level Figure. The dominoes were
used as the map barrier while the wooden cubes performed the task of the
collidable objects in the level.

For each of the three game mechanics that {{{insert_game_name_here}}} has --
sliding, flipping, unfolding -- we implemented a physical test level to
showcase the respective mechanic. The layout of the first sample level, featuring
sliding, together with its physical implementation can be seen in [[Fig:PProtoLv1]].

#+caption: Layout and physical prototype of the first sample level
#+name: Fig:PProtoLv1
#+attr_latex: :options [htbp]
#+begin_figure 
#+begin_center
#+attr_latex: :width 0.4\textwidth :center 
 [[../images/level1.png]]
#+attr_latex: :width 0.4\textwidth :center 
[[../images/Paper_prototype_img/sample_lvl_1.jpeg]]  
#+end_center
#+end_figure
In order to test out dry tiles a second prototype was created which was supposed
to resemble the second sample level. For the representation of the dry tiles we
used colored strips of paper as pictured in [[Fig:PProtoLv2]]. The different
colors do not carry a specific meaning, they were just used to make the it clear
where each tile starts and ends.

#+caption: Layout and physical prototype of sample level 2
#+name: Fig:PProtoLv2
#+attr_latex: :options [htbp]
#+begin_figure 
#+begin_center
#+attr_latex: :width 0.4\textwidth :center
 [[../images/level2.png]]
#+attr_latex: :width 0.4\textwidth :center
[[../images/Paper_prototype_img/sample_lvl_2.jpg]]
#+end_center
#+end_figure
Furthermore we created a foldable prototype from paper to test the third major
game mechanic, the unfolding of the cube, in a third simple test level. Due to
the physical limitations the cube can obviously not freely unfold and only use
the pre-determined cuts.

#+caption: Layout and physical prototype of the rudimentary unfolding test level
#+name: Fig:PProtoLv3
#+attr_latex: :options [htbp]
#+begin_figure 
#+begin_center
#+attr_latex: :width 0.3\textwidth :center
#+name: Fig:Level3
 [[../images/unfoldSample.png]] 
#+attr_latex: :width 0.4\textwidth :center
[[../images/Paper_prototype_img/sample_lvl_3.jpeg]]
#+end_center
#+end_figure

* Observations & Revisions
During the creation of the physical prototype we realized several attributes,
problems and design possibilities that we did not think about before. In the
following sections we will highlight the most significant new perspectives that
we gained in the prototyping process.

#+begin_comment
For our first attempt in prototype creation we used chess pieces to build the
level ([[Fig:PProtoChess]]). The main issues with this iteration of our
prototype was that the chess pieces did not mark the tiles as distinctly as we
wanted to. Therefore we opted to use rectangular building blocks for the
prototype levels.
#+caption: Chess Prototype
#+name: Fig:PProtoChess
[[../images/Paper_prototype_img/try1_shit.jpeg]]
#+end_comment

** Transition from slippery to dry tile
Testing the prototype for the second sample level ([[Fig:PProtoLv2]]) brought up the
question how the cube should behave when moving from a slippery surface onto a
dry one and vice versa. Both possibilities of a sliding transition and a
flipping motion seemed equally plausible as both options influence the task of
designing levels in a similar fashion. That being said, we made the decision to
have the cube always flip by 90 degrees when transitioning between slippery and
dry tiles. This seemed like the more consistent and "realistic" option to us.

** Number of differentiable cube surfaces
With the concept of dry tiles, on which the cube would move by flipping by 90
degrees, we introduced new finish tiles. In order to complete such levels the
cube would have to land on these finish tiles in a specific orientation.

A further observation that was made in the second prototype ([[Fig:PProtoLv2]]) was
that this initial concept would cause levels to become too complex if all six
surfaces of the cube mattered. As a result we made the change to reduce the
number of different surfaces down to three. We feel that this reduces the
complexity down to a more reasonable level, as it would be too hard to plan out
the correct combination of moves to land on one specific side.

** State of finish tiles
# Minh: sooo, variable then?
When testing our prototype one of the first things that we realized was that
there is a significant difference whether the finish tile is slippery or dry. We
see this aspect as a new angle in the level design as we can create levels that
seem simple on the first glance but are more complex as the direct route would
let the cube slide beyond the finish tile. This type of level design is
especially suited for the first tier where the only mechanic available are the
sliding tiles.

** Unfold direction of the cube
The player is supposed unfold the cube in order to reach a tile they would
otherwise slide over or not reach in the first place. In the initial attempt of
the sample level ([[Fig:PProtoLv3]]) in which we tried the unfolding mechanic, we
made the mistake of having the remainders of the partially unfolded cube stick
to the starting tile instead of moving forward. Having made this mistake it made
us further consider whether the player should be able to unfold the cube
anywhere as long as they are standing still or if the cube can only be unfolded
on dry tiles.

If the player could unfold the cube anywhere, even when standing on a slippery
tile, the player could just "walk" everywhere, and it would be impossible to
design interesting levels.
# What's our call here? Maybe add additional indicators?

** Game Speed & Animation Locking
While watching our recorded footage we noticed that the animation/game speed was
slower than what we initially envisioned for this game. The movement of the cube
has to feel responsive while still engaging the animation locking that we want
to implement due to gameplay reasons. We believe that one effective way to
balance these aspects is to implement input buffering, which allows the user to
input a new command while the cube is still locked in its current animation.
This new command will then be executed as soon as the last animation has
finished thus creating a smoother input experience.
 
# * Conclusion ?
* Meta Info :noexport:
#+options: html-postamble:nil toc:nil title:nil
#+macro: insert_game_name_here qubi
#+macro: insert_team_name_here FÃ¼nfKopf

#+author: Felix Brendel, Jonas Helms, Van Minh Pham
#+title: Prototype: {{{insert_game_name_here}}}

#+latex_header: \input{latex.tex}

